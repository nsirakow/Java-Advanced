Create a generic data structure that can store any type that can be compared. Implement functions:
· void add(T element)
· T remove(int index)
· boolean contains(T element)
· void swap(int index, int index)
· int countGreaterThan(T element)
· T getMax()
· T getMin()

Create a command interpreter that reads commands and modifies the custom list that you have created. Implement the commands:
· Add <element> - Adds the given element to the end of the list
· Remove <index> - Removes the element at the given index
· Contains <element> - Prints if the list contains the given element (true or false)
· Swap <index> <index> - Swaps the elements at the given indexes
· Greater <element> - Counts the elements that are greater than the given element and prints their count
· Max - Prints the maximum element in the list
· Min - Prints the minimum element in the list
· Print - Prints all elements in the list, each on a separate line
· END - stops the reading of commands

Create an additional Sorter class. It should have a single static method sort() which can sort objects of type CustomList containing any type that can be compared.
Extend the command list to support one additional command Sort:
· Sort - Sort the elements in the list in ascending order.

Examples:

Input                    Output                       |       Input                  Output
                                                      |
Add aa                   cc                           |       Add cc                 aa
Add bb                   aa                           |       Add bb                 bb
Add cc                   2                            |       Add aa                 cc
Max                      true                         |       Sort
Min                      cc                           |       Print
Greater aa               bb                           |       END
Swap 0 2                 aa                           |
Contains aa                                           |
Print                                                 |
END                                                   |
